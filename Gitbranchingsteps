Here are some common steps for working with branches in Git:
1.	Create a new branch: Use the git branch command, followed by the name of the new branch, to create a new branch. For example, git branch my-branch will create a new branch called "my-branch".
2.	Switch to a different branch: Use the git checkout command, followed by the name of the branch, to switch to a different branch. For example, git checkout my-branch will switch to the "my-branch" branch.
3.	Create a new branch and switch to it: You can use the git checkout command with the -b flag to create a new branch and switch to it in one command. For example, git checkout -b my-new-branch will create a new branch called "my-new-branch" and switch to it.
4.	Merge a branch into another branch: Use the git merge command, followed by the name of the branch you want to merge, to merge one branch into another. For example, git merge my-branch will merge the "my-branch" branch into the current branch.
5.	Delete a branch: Use the git branch command with the -d flag, followed by the name of the branch you want to delete, to delete a branch. For example, git branch -d my-branch will delete the "my-branch" branch.
It's a good idea to use branches when working on new features or bug fixes, so that you can isolate your work and keep the main branch (usually called "master") stable. When you're ready to merge your changes back into the main branch, you can use the git merge command to combine the two branches.













This file too to change and see a conflict issue
